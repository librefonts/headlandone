<?xml version="1.0" encoding="ISO-8859-1"?>
<ttFont ttLibVersion="2.4">

  <fpgm>
    <assembly>
      PUSHB[ ]  /* 1 value pushed */
      0
      FDEF[ ]
      DUP[ ]
      ABS[ ]
      PUSHB[ ]  /* 1 value pushed */
      32
      ADD[ ]
      FLOOR[ ]
      SWAP[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      LT[ ]
      IF[ ]
      NEG[ ]
      EIF[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      FDEF[ ]
      DUP[ ]
      ABS[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      192
      LT[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      MINDEX[ ]
      AND[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      RCVT[ ]
      OR[ ]
      IF[ ]
      POP[ ]
      SWAP[ ]
      POP[ ]
      ELSE[ ]
      ROLL[ ]
      IF[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      80
      LT[ ]
      IF[ ]
      POP[ ]
      PUSHB[ ]  /* 1 value pushed */
      64
      EIF[ ]
      ELSE[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      56
      LT[ ]
      IF[ ]
      POP[ ]
      PUSHB[ ]  /* 1 value pushed */
      56
      EIF[ ]
      EIF[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      10
      RCVT[ ]
      SUB[ ]
      ABS[ ]
      PUSHB[ ]  /* 1 value pushed */
      40
      LT[ ]
      IF[ ]
      POP[ ]
      PUSHB[ ]  /* 1 value pushed */
      10
      RCVT[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      48
      LT[ ]
      IF[ ]
      POP[ ]
      PUSHB[ ]  /* 1 value pushed */
      48
      EIF[ ]
      ELSE[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      192
      LT[ ]
      IF[ ]
      DUP[ ]
      FLOOR[ ]
      DUP[ ]
      ROLL[ ]
      ROLL[ ]
      SUB[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      10
      LT[ ]
      IF[ ]
      ADD[ ]
      ELSE[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      32
      LT[ ]
      IF[ ]
      POP[ ]
      PUSHB[ ]  /* 1 value pushed */
      10
      ADD[ ]
      ELSE[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      54
      LT[ ]
      IF[ ]
      POP[ ]
      PUSHB[ ]  /* 1 value pushed */
      54
      ADD[ ]
      ELSE[ ]
      ADD[ ]
      EIF[ ]
      EIF[ ]
      EIF[ ]
      ELSE[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      CALL[ ]
      EIF[ ]
      EIF[ ]
      SWAP[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      LT[ ]
      IF[ ]
      NEG[ ]
      EIF[ ]
      EIF[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      7
      SWAP[ ]
      WS[ ]
      PUSHB[ ]  /* 1 value pushed */
      6
      SWAP[ ]
      WS[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SWAP[ ]
      WS[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      RS[ ]
      PUSHB[ ]  /* 1 value pushed */
      6
      RS[ ]
      LTEQ[ ]
      IF[ ]
      PUSHB[ ]  /* 1 value pushed */
      7
      RS[ ]
      CALL[ ]
      PUSHB[ ]  /* 3 values pushed */
      0 1 0
      RS[ ]
      ADD[ ]
      WS[ ]
      PUSHB[ ]  /* 1 value pushed */
      22
      NEG[ ]
      JMPR[ ]
      EIF[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      3
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      RS[ ]
      DUP[ ]
      RCVT[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      RCVT[ ]
      MUL[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      WCVTP[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      RS[ ]
      DUP[ ]
      RCVT[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      CALL[ ]
      SWAP[ ]
      PUSHB[ ]  /* 2 values pushed */
      6 4
      CINDEX[ ]
      ADD[ ]
      DUP[ ]
      RCVT[ ]
      ROLL[ ]
      SWAP[ ]
      SUB[ ]
      DUP[ ]
      ABS[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      32
      LT[ ]
      IF[ ]
      POP[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      ELSE[ ]
      PUSHB[ ]  /* 1 value pushed */
      48
      LT[ ]
      IF[ ]
      PUSHB[ ]  /* 1 value pushed */
      32
      ELSE[ ]
      PUSHB[ ]  /* 1 value pushed */
      64
      EIF[ ]
      EIF[ ]
      SWAP[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      LT[ ]
      IF[ ]
      NEG[ ]
      EIF[ ]
      PUSHB[ ]  /* 1 value pushed */
      3
      CINDEX[ ]
      SWAP[ ]
      SUB[ ]
      WCVTP[ ]
      WCVTP[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      FDEF[ ]
      PUSHB[ ]  /* 2 values pushed */
      5 5
      RCVT[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      SUB[ ]
      WCVTP[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      6
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      ADD[ ]
      DUP[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      9
      RS[ ]
      MD[1]
      PUSHB[ ]  /* 1 value pushed */
      0
      LT[ ]
      IF[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      9
      SWAP[ ]
      WS[ ]
      EIF[ ]
      PUSHB[ ]  /* 1 value pushed */
      10
      RS[ ]
      MD[1]
      PUSHB[ ]  /* 1 value pushed */
      0
      GT[ ]
      IF[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      10
      SWAP[ ]
      WS[ ]
      EIF[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      7
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      RS[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      WS[ ]
      PUSHB[ ]  /* 3 values pushed */
      0 1 0
      RS[ ]
      ADD[ ]
      WS[ ]
      PUSHB[ ]  /* 2 values pushed */
      9 2
      CINDEX[ ]
      WS[ ]
      PUSHB[ ]  /* 2 values pushed */
      10 2
      CINDEX[ ]
      WS[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      SZPS[ ]
      SWAP[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      3
      CINDEX[ ]
      LT[ ]
      IF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      RS[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      CINDEX[ ]
      WS[ ]
      ROLL[ ]
      ROLL[ ]
      DUP[ ]
      ROLL[ ]
      SWAP[ ]
      SUB[ ]
      PUSHB[ ]  /* 1 value pushed */
      6
      LOOPCALL[ ]
      POP[ ]
      SWAP[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      SUB[ ]
      DUP[ ]
      ROLL[ ]
      SWAP[ ]
      SUB[ ]
      PUSHB[ ]  /* 1 value pushed */
      6
      LOOPCALL[ ]
      POP[ ]
      ELSE[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      RS[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      WS[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      SUB[ ]
      PUSHB[ ]  /* 1 value pushed */
      6
      LOOPCALL[ ]
      POP[ ]
      EIF[ ]
      PUSHB[ ]  /* 1 value pushed */
      9
      RS[ ]
      GC[1]
      PUSHB[ ]  /* 1 value pushed */
      10
      RS[ ]
      GC[1]
      ADD[ ]
      PUSHB[ ]  /* 1 value pushed */
      128
      DIV[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      RCVT[ ]
      MUL[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      PUSHB[ ]  /* 2 values pushed */
      0 0
      SZP0[ ]
      SWAP[ ]
      WCVTP[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      RS[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      MIAP[0]
      PUSHB[ ]  /* 3 values pushed */
      1 1 1
      RS[ ]
      ADD[ ]
      WS[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      8
      FDEF[ ]
      PUSHB[ ]  /* 2 values pushed */
      0 5
      RCVT[ ]
      EQ[ ]
      IF[ ]
      SVTCA[0]
      DUP[ ]
      ADD[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      SUB[ ]
      PUSHB[ ]  /* 4 values pushed */
      11 11 1 0
      WS[ ]
      ROLL[ ]
      ADD[ ]
      PUSHB[ ]  /* 2 values pushed */
      7 2
      CALL[ ]
      ELSE[ ]
      CLEAR[ ]
      EIF[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      9
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      CALL[ ]
      PUSHB[ ]  /* 2 values pushed */
      0 5
      RCVT[ ]
      EQ[ ]
      IF[ ]
      SVTCA[0]
      DUP[ ]
      ADD[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      SUB[ ]
      PUSHB[ ]  /* 4 values pushed */
      11 11 1 0
      WS[ ]
      ROLL[ ]
      ADD[ ]
      PUSHB[ ]  /* 2 values pushed */
      7 2
      CALL[ ]
      ELSE[ ]
      CLEAR[ ]
      EIF[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      10
      FDEF[ ]
      DUP[ ]
      ADD[ ]
      PUSHB[ ]  /* 1 value pushed */
      11
      ADD[ ]
      DUP[ ]
      RS[ ]
      SWAP[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      ADD[ ]
      RS[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      LTEQ[ ]
      IF[ ]
      SWAP[ ]
      DUP[ ]
      ALIGNRP[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      ADD[ ]
      SWAP[ ]
      PUSHB[ ]  /* 1 value pushed */
      18
      NEG[ ]
      JMPR[ ]
      ELSE[ ]
      POP[ ]
      POP[ ]
      EIF[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      11
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      10
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      10
      LOOPCALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      12
      FDEF[ ]
      DUP[ ]
      DUP[ ]
      GC[1]
      DUP[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      RCVT[ ]
      MUL[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      SWAP[ ]
      SUB[ ]
      SHPIX[ ]
      SWAP[ ]
      DUP[ ]
      ROLL[ ]
      NEQ[ ]
      IF[ ]
      DUP[ ]
      GC[1]
      DUP[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      RCVT[ ]
      MUL[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      SWAP[ ]
      SUB[ ]
      SHPIX[ ]
      ELSE[ ]
      POP[ ]
      EIF[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      13
      FDEF[ ]
      PUSHB[ ]  /* 2 values pushed */
      0 5
      RCVT[ ]
      EQ[ ]
      IF[ ]
      SVTCA[0]
      PUSHB[ ]  /* 1 value pushed */
      1
      SZPS[ ]
      PUSHB[ ]  /* 1 value pushed */
      12
      LOOPCALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      SZP2[ ]
      IUP[0]
      ELSE[ ]
      CLEAR[ ]
      EIF[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      14
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      CALL[ ]
      PUSHB[ ]  /* 2 values pushed */
      0 5
      RCVT[ ]
      EQ[ ]
      IF[ ]
      SVTCA[0]
      PUSHB[ ]  /* 1 value pushed */
      1
      SZPS[ ]
      PUSHB[ ]  /* 1 value pushed */
      12
      LOOPCALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      SZP2[ ]
      IUP[0]
      ELSE[ ]
      CLEAR[ ]
      EIF[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      15
      FDEF[ ]
      DUP[ ]
      SHC[1]
      PUSHB[ ]  /* 1 value pushed */
      1
      ADD[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      16
      FDEF[ ]
      SVTCA[0]
      PUSHB[ ]  /* 1 value pushed */
      3
      RCVT[ ]
      MUL[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      RCVT[ ]
      DIV[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      RCVT[ ]
      MUL[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      RCVT[ ]
      DIV[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SZPS[ ]
      PUSHB[ ]  /* 5 values pushed */
      0 0 0 0 0
      WCVTP[ ]
      MIAP[0]
      SWAP[ ]
      SHPIX[ ]
      PUSHB[ ]  /* 2 values pushed */
      15 1
      SZP2[ ]
      LOOPCALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      17
      FDEF[ ]
      DUP[ ]
      ALIGNRP[ ]
      DUP[ ]
      GC[1]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      RCVT[ ]
      MUL[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      RS[ ]
      SUB[ ]
      SHPIX[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      18
      FDEF[ ]
      MDAP[0]
      SLOOP[ ]
      ALIGNRP[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      19
      FDEF[ ]
      DUP[ ]
      ALIGNRP[ ]
      DUP[ ]
      GC[1]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      RCVT[ ]
      MUL[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      RS[ ]
      SUB[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      RS[ ]
      MUL[ ]
      SHPIX[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      20
      FDEF[ ]
      PUSHB[ ]  /* 2 values pushed */
      2 0
      SZPS[ ]
      CINDEX[ ]
      DUP[ ]
      MDAP[0]
      DUP[ ]
      GC[1]
      PUSHB[ ]  /* 1 value pushed */
      0
      SWAP[ ]
      WS[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      MD[0]
      ROLL[ ]
      ROLL[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      DIV[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      SWAP[ ]
      WS[ ]
      PUSHB[ ]  /* 3 values pushed */
      19 1 1
      SZP2[ ]
      SZP1[ ]
      LOOPCALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      21
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SZPS[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      CINDEX[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      CINDEX[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      CALL[ ]
      NEG[ ]
      ROLL[ ]
      MDAP[0]
      SWAP[ ]
      DUP[ ]
      DUP[ ]
      ALIGNRP[ ]
      ROLL[ ]
      SHPIX[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      22
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SZPS[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      CINDEX[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      CINDEX[ ]
      DUP[ ]
      MDAP[0]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      SWAP[ ]
      WS[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      CALL[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      96
      LT[ ]
      IF[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      64
      LTEQ[ ]
      IF[ ]
      PUSHB[ ]  /* 4 values pushed */
      3 32 4 32
      ELSE[ ]
      PUSHB[ ]  /* 4 values pushed */
      3 38 4 26
      EIF[ ]
      WS[ ]
      WS[ ]
      SWAP[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      8
      RS[ ]
      DUP[ ]
      ROLL[ ]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      SWAP[ ]
      GC[0]
      ADD[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      RS[ ]
      PUSHB[ ]  /* 1 value pushed */
      128
      DIV[ ]
      ADD[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      CALL[ ]
      DUP[ ]
      ROLL[ ]
      ROLL[ ]
      SUB[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      3
      RS[ ]
      ADD[ ]
      ABS[ ]
      SWAP[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      RS[ ]
      SUB[ ]
      ABS[ ]
      LT[ ]
      IF[ ]
      PUSHB[ ]  /* 1 value pushed */
      3
      RS[ ]
      SUB[ ]
      ELSE[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      RS[ ]
      ADD[ ]
      EIF[ ]
      PUSHB[ ]  /* 1 value pushed */
      3
      CINDEX[ ]
      PUSHB[ ]  /* 1 value pushed */
      128
      DIV[ ]
      SUB[ ]
      SWAP[ ]
      DUP[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      MINDEX[ ]
      SWAP[ ]
      GC[0]
      SUB[ ]
      SHPIX[ ]
      ELSE[ ]
      SWAP[ ]
      PUSHB[ ]  /* 1 value pushed */
      8
      RS[ ]
      GC[0]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      PUSHB[ ]  /* 1 value pushed */
      8
      RS[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      ADD[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      RS[ ]
      PUSHB[ ]  /* 1 value pushed */
      128
      DIV[ ]
      ADD[ ]
      SWAP[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      CALL[ ]
      SWAP[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      RS[ ]
      ADD[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      CINDEX[ ]
      SUB[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      CINDEX[ ]
      PUSHB[ ]  /* 1 value pushed */
      128
      DIV[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      MINDEX[ ]
      SUB[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      CINDEX[ ]
      ADD[ ]
      ABS[ ]
      SWAP[ ]
      PUSHB[ ]  /* 1 value pushed */
      3
      CINDEX[ ]
      ADD[ ]
      ABS[ ]
      LT[ ]
      IF[ ]
      POP[ ]
      ELSE[ ]
      SWAP[ ]
      POP[ ]
      EIF[ ]
      SWAP[ ]
      DUP[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      MINDEX[ ]
      SWAP[ ]
      GC[0]
      SUB[ ]
      SHPIX[ ]
      EIF[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      23
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SZPS[ ]
      DUP[ ]
      DUP[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      MINDEX[ ]
      DUP[ ]
      MDAP[0]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      SWAP[ ]
      ALIGNRP[ ]
      SHPIX[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      24
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SZPS[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      8
      SWAP[ ]
      WS[ ]
      DUP[ ]
      DUP[ ]
      DUP[ ]
      GC[0]
      SWAP[ ]
      GC[1]
      PUSHB[ ]  /* 1 value pushed */
      0
      CALL[ ]
      SWAP[ ]
      SUB[ ]
      SHPIX[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      25
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SZPS[ ]
      PUSHB[ ]  /* 1 value pushed */
      3
      CINDEX[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      EQ[ ]
      IF[ ]
      MDAP[0]
      DUP[ ]
      ALIGNRP[ ]
      SWAP[ ]
      POP[ ]
      ELSE[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      CINDEX[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      CINDEX[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      PUSHB[ ]  /* 1 value pushed */
      6
      CINDEX[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      CINDEX[ ]
      MD[0]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      SUB[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      RCVT[ ]
      MUL[ ]
      SWAP[ ]
      DIV[ ]
      MUL[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      SWAP[ ]
      MDAP[0]
      SWAP[ ]
      DUP[ ]
      DUP[ ]
      ALIGNRP[ ]
      ROLL[ ]
      SHPIX[ ]
      SWAP[ ]
      POP[ ]
      EIF[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      26
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SZPS[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      8
      RS[ ]
      DUP[ ]
      MDAP[0]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      DUP[ ]
      ADD[ ]
      PUSHB[ ]  /* 1 value pushed */
      32
      ADD[ ]
      FLOOR[ ]
      PUSHB[ ]  /* 1 value pushed */
      128
      DIV[ ]
      SWAP[ ]
      DUP[ ]
      DUP[ ]
      ALIGNRP[ ]
      ROLL[ ]
      SHPIX[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      27
      FDEF[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      GC[0]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      GC[0]
      GT[ ]
      IF[ ]
      DUP[ ]
      ALIGNRP[ ]
      EIF[ ]
      MDAP[0]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      28
      FDEF[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      GC[0]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      GC[0]
      LT[ ]
      IF[ ]
      DUP[ ]
      ALIGNRP[ ]
      EIF[ ]
      MDAP[0]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      29
      FDEF[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      GC[0]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      GC[0]
      GT[ ]
      IF[ ]
      DUP[ ]
      ALIGNRP[ ]
      EIF[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      GC[0]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      GC[0]
      LT[ ]
      IF[ ]
      DUP[ ]
      ALIGNRP[ ]
      EIF[ ]
      MDAP[0]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      30
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SZP2[ ]
      DUP[ ]
      GC[1]
      PUSHB[ ]  /* 1 value pushed */
      0
      SWAP[ ]
      WS[ ]
      PUSHB[ ]  /* 3 values pushed */
      0 1 1
      SZP2[ ]
      SZP1[ ]
      SZP0[ ]
      MDAP[0]
      PUSHB[ ]  /* 1 value pushed */
      17
      LOOPCALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      31
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SZP2[ ]
      DUP[ ]
      GC[1]
      PUSHB[ ]  /* 1 value pushed */
      0
      SWAP[ ]
      WS[ ]
      PUSHB[ ]  /* 3 values pushed */
      0 1 1
      SZP2[ ]
      SZP1[ ]
      SZP0[ ]
      MDAP[0]
      PUSHB[ ]  /* 1 value pushed */
      17
      LOOPCALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      32
      FDEF[ ]
      PUSHB[ ]  /* 2 values pushed */
      0 1
      SZP1[ ]
      SZP0[ ]
      PUSHB[ ]  /* 1 value pushed */
      18
      LOOPCALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      33
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      20
      LOOPCALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      38
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      21
      CALL[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      GC[0]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      GC[0]
      GT[ ]
      IF[ ]
      DUP[ ]
      ALIGNRP[ ]
      EIF[ ]
      MDAP[0]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      41
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      22
      CALL[ ]
      ROLL[ ]
      DUP[ ]
      DUP[ ]
      ALIGNRP[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      SWAP[ ]
      WS[ ]
      ROLL[ ]
      SHPIX[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      GC[0]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      GC[0]
      GT[ ]
      IF[ ]
      DUP[ ]
      ALIGNRP[ ]
      EIF[ ]
      MDAP[0]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      RS[ ]
      MDAP[0]
      PUSHB[ ]  /* 1 value pushed */
      11
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      39
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SZPS[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      CINDEX[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      MINDEX[ ]
      DUP[ ]
      MDAP[0]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      CALL[ ]
      SWAP[ ]
      DUP[ ]
      ALIGNRP[ ]
      DUP[ ]
      MDAP[0]
      SWAP[ ]
      SHPIX[ ]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      36
      FDEF[ ]
      PUSHB[ ]  /* 2 values pushed */
      8 4
      CINDEX[ ]
      WS[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SZPS[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      CINDEX[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      CINDEX[ ]
      DUP[ ]
      MDAP[0]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      SWAP[ ]
      WS[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      CALL[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      96
      LT[ ]
      IF[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      64
      LTEQ[ ]
      IF[ ]
      PUSHB[ ]  /* 4 values pushed */
      3 32 4 32
      ELSE[ ]
      PUSHB[ ]  /* 4 values pushed */
      3 38 4 26
      EIF[ ]
      WS[ ]
      WS[ ]
      SWAP[ ]
      DUP[ ]
      GC[1]
      PUSHB[ ]  /* 1 value pushed */
      5
      RS[ ]
      PUSHB[ ]  /* 1 value pushed */
      128
      DIV[ ]
      ADD[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      CALL[ ]
      DUP[ ]
      ROLL[ ]
      ROLL[ ]
      SUB[ ]
      DUP[ ]
      PUSHB[ ]  /* 1 value pushed */
      3
      RS[ ]
      ADD[ ]
      ABS[ ]
      SWAP[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      RS[ ]
      SUB[ ]
      ABS[ ]
      LT[ ]
      IF[ ]
      PUSHB[ ]  /* 1 value pushed */
      3
      RS[ ]
      SUB[ ]
      ELSE[ ]
      PUSHB[ ]  /* 1 value pushed */
      4
      RS[ ]
      ADD[ ]
      EIF[ ]
      PUSHB[ ]  /* 1 value pushed */
      3
      CINDEX[ ]
      PUSHB[ ]  /* 1 value pushed */
      128
      DIV[ ]
      SUB[ ]
      PUSHB[ ]  /* 1 value pushed */
      2
      CINDEX[ ]
      GC[0]
      SUB[ ]
      SHPIX[ ]
      SWAP[ ]
      DUP[ ]
      ALIGNRP[ ]
      SWAP[ ]
      SHPIX[ ]
      ELSE[ ]
      POP[ ]
      DUP[ ]
      DUP[ ]
      GC[0]
      SWAP[ ]
      GC[1]
      PUSHB[ ]  /* 1 value pushed */
      0
      CALL[ ]
      SWAP[ ]
      SUB[ ]
      SHPIX[ ]
      POP[ ]
      EIF[ ]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      35
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      8
      SWAP[ ]
      WS[ ]
      PUSHB[ ]  /* 1 value pushed */
      34
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      37
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      21
      CALL[ ]
      MDAP[0]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      40
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      22
      CALL[ ]
      POP[ ]
      SWAP[ ]
      DUP[ ]
      DUP[ ]
      ALIGNRP[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      SWAP[ ]
      WS[ ]
      SWAP[ ]
      SHPIX[ ]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      5
      RS[ ]
      MDAP[0]
      PUSHB[ ]  /* 1 value pushed */
      11
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      34
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SZPS[ ]
      RCVT[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      DUP[ ]
      GC[0]
      ROLL[ ]
      SWAP[ ]
      SUB[ ]
      SHPIX[ ]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      42
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      23
      CALL[ ]
      MDAP[0]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      43
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      23
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      27
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      44
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      23
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      28
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      45
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      0
      SZPS[ ]
      PUSHB[ ]  /* 1 value pushed */
      23
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      29
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      46
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      24
      CALL[ ]
      MDAP[0]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      47
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      24
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      27
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      48
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      24
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      28
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      49
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      24
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      29
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      50
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      25
      CALL[ ]
      MDAP[0]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      51
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      25
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      27
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      52
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      25
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      28
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      53
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      25
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      29
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      54
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      26
      CALL[ ]
      MDAP[0]
      PUSHB[ ]  /* 2 values pushed */
      11 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      55
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      26
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      27
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      56
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      26
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      28
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      57
      FDEF[ ]
      PUSHB[ ]  /* 1 value pushed */
      26
      CALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      29
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      58
      FDEF[ ]
      CALL[ ]
      ENDF[ ]
      PUSHB[ ]  /* 1 value pushed */
      59
      FDEF[ ]
      PUSHB[ ]  /* 2 values pushed */
      0 5
      RCVT[ ]
      EQ[ ]
      IF[ ]
      PUSHB[ ]  /* 1 value pushed */
      58
      LOOPCALL[ ]
      PUSHB[ ]  /* 1 value pushed */
      1
      SZP2[ ]
      IUP[0]
      ELSE[ ]
      CLEAR[ ]
      EIF[ ]
      ENDF[ ]
    </assembly>
  </fpgm>

</ttFont>
